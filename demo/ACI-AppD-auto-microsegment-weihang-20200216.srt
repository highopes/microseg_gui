1
00:00:00,000 --> 00:00:15,000
示例应用courseback经过AppD的监测可以看到典型的三层结构
web层（coursefront）、App层（coursefund）和数据库层

2
00:00:15,000 --> 00:00:21,000
在ACI上它的前两层都放在一个名为cback-epg的Base EPG内

3
00:00:21,000 --> 00:00:30,000
而数据库则位于另一个hangwe-DB-epg内
二者之间有Contract

4
00:00:30,000 --> 00:00:38,000
当前Base EPG内鱼龙混杂，粗线条的划分不能保证安全

5
00:00:38,000 --> 00:00:53,000
ACI有μSeg EPG（微分段），但苦于不了解应用结构，
无法准确隔离，其他主机对应用可以随意访问

6
00:00:53,000 --> 00:01:09,000
ACI能够像给手机装应用一样扩展各种功能，今天就演示
一款能够从AppD加载应用结构自动完成微分段的工具

7
00:01:09,000 --> 00:01:25,000
输入Base EPG和在AppD里应用的名称

8
00:01:25,000 --> 00:01:32,000
一键即可按AppD分析出的应用层级来实现Base EPG内部的
微分段

9
00:01:32,000 --> 00:01:45,000
我们回到Tenants菜单下看EPG的拓扑变化

10
00:01:45,000 --> 00:01:55,000
能够发现在Base EPG旁边多出了按courseback应用层级
划分出的两个微分段（就使用层级的名称）

11
00:01:55,000 --> 00:02:10,000
它们继承原有的Base EPG的对外策略，但内部和Base EPG
的其他主机隔离，自己也按应用层次隔离

12
00:02:10,000 --> 00:02:15,000
验证一下EPG的成员变化

13
00:02:15,000 --> 00:02:25,000
Base EPG少了courseback应用的主机

14
00:02:28,000 --> 00:02:35,000
可以看到Base EPG被自动实现微分段的精确时间

15
00:02:35,000 --> 00:02:49,000
courseback应用的主机被准确的部署到了各自的微分段内

16
00:02:50,000 --> 00:02:59,000
Base EPG内其他节点已被禁止访问微分段内主机

17
00:03:00,000 --> 00:03:14,000
而微分段之间，以及与后台数据库仍保持应用所需的数据畅通
（源代码和演示：https://github.com/highopes/microseg_gui）

